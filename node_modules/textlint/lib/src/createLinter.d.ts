import { TextlintKernelDescriptor, TextlintResult } from "@textlint/kernel";
import { TextlintFixResult } from "@textlint/types";
export type CreateLinterOptions = {
    descriptor: TextlintKernelDescriptor;
    ignoreFile?: string;
    quiet?: boolean;
    cache?: boolean;
    cacheLocation?: string;
};
export declare const createLinter: (options: CreateLinterOptions) => {
    /**
     * Executes the current configuration on an array of file and directory names.
     * @param {String[]}  files An array of file and directory names.
     * @returns {Promise<TextlintResult[]>} The results for all files that were linted.
     */
    lintFiles(files: string[]): Promise<TextlintResult[]>;
    lintText(text: string, filePath: string): Promise<TextlintResult>;
    fixFiles(files: string[]): Promise<TextlintFixResult[]>;
    fixText(text: string, filePath: string): Promise<TextlintFixResult>;
};
//# sourceMappingURL=createLinter.d.ts.map